name: CI Pipeline

# Disparadores
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Definicion de las tareas
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        env: 
          AI_MODELS_TOKEN: ${{ secrets.GITHUB_MODELS_TOKEN }}
        run: |
          echo "AI_MODELS_TOKEN is set"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Configuracion cache de maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Inicia el servidor Eureka
      - name: Start Eureka Server
        run: |
          mvn -f eureka-server/pom.xml spring-boot:run &
        env:
          SERVER_PORT: 8761 # Configura el puerto si es diferente al predeterminado

      # Verifica que el servidor Eureka est√© corriendo
      - name: Wait for Eureka Server
        run: |
          echo "Waiting for Eureka Server to be available..."
          until curl --silent --fail http://localhost:8761; do
            echo "Eureka Server is not ready yet. Retrying..."
            sleep 5
          done
          echo "Eureka Server is up and running!"

      - name: Build with Maven and test
        run: mvn clean install

      - name: Run tests for each microservice
        run: |
          for dir in $(find . -name "pom.xml" -exec dirname {} \;); do
            echo "Running tests in $dir"
            mvn -f $dir/pom.xml test
          done