name: CI Pipeline

# Disparadores
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Definicion de las tareas
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up environment
        env: 
          AI_MODELS_TOKEN: ${{ secrets.GITHUB_MODELS_TOKEN }}
        run: |
          echo "AI_MODELS_TOKEN is set"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Configuracion cache de maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install curl and Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y curl maven

      # Inicia el servidor Eureka y sigue los logs en tiempo real
      - name: Start Eureka Server
        run: |
          mvn -f discoveryserver/pom.xml spring-boot:run > eureka.log 2>&1 &
          tail -f eureka.log &
          echo "Eureka Server logs will be captured in eureka.log."

      - name: Wait for Eureka Server
        run: |
          echo "Waiting for Eureka Server to be available..."
          until curl --silent --fail http://localhost:8761; do
            echo "Eureka Server is not ready yet. Retrying..."
            sleep 5
          done
          echo "Eureka Server is up and running."

      - name: Print Eureka logs on failure
        if: failure()
        run: |
          echo "Printing Eureka Server logs..."
          cat eureka.log